---
import ContentTypeCheckbox from "../components/ContentTypeCheckbox.astro";
import FilenameInput from "../components/FilenameInput.astro";
import FormatTypeSelect from "../components/FormatTypeSelect.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Screen Recorder">
  <main class="m-auto max-w-[800px] w-full">
    <h1 class="text-3xl font-semibold mb-4">Screen Recorder</h1>

    <FilenameInput>Filename</FilenameInput>

    <ContentTypeCheckbox value="video">Video</ContentTypeCheckbox>
    <ContentTypeCheckbox value="audio">Audio</ContentTypeCheckbox>

    <FormatTypeSelect>Format</FormatTypeSelect>

    <button
      data-stop-recording
      disabled
      class="p-2 bg-blue-300 hover:bg-blue-600 font-semibold rounded disabled:bg-blue-800 disabled:cursor-not-allowed"
      >Stop Recording</button
    >

    <button
      data-start-recording
      class="p-2 bg-red-400 hover:bg-red-600 font-semibold rounded disabled:bg-red-800 disabled:cursor-not-allowed"
    >
      Start Recording</button
    >
  </main>
</Layout>

<script>
  const startRecording = document.querySelector(
    "[data-start-recording]"
  ) as HTMLButtonElement;
  const stopRecording = document.querySelector(
    "[data-stop-recording]"
  ) as HTMLButtonElement;

  let mediaRecorder: MediaRecorder;
  let media: MediaStream;

  startRecording.addEventListener("click", handleStartRecording);
  stopRecording.addEventListener("click", handleStopRecording);

  async function handleStartRecording(e) {
    console.log("start recording");
    startRecording.disabled = true;
    stopRecording.disabled = false;

    media = await navigator.mediaDevices.getDisplayMedia({
      video: { frameRate: { ideal: 60, max: 60 } },
      audio: true,
    });

    const recordingType = document.querySelector(
      "[data-video-group] option:checked"
    ) as HTMLOptionElement;

    mediaRecorder = new MediaRecorder(media, {
      mimeType: recordingType.dataset.mimeType,
    });

    mediaRecorder.start();

    mediaRecorder.addEventListener("dataavailable", (e) => {
      const filename = document.querySelector("#filename") as HTMLInputElement;
      if (!filename.value) filename.value = "recording";

      const link = document.createElement("a");
      link.href = URL.createObjectURL(e.data);
      link.download = `${filename.value}.${recordingType.value}`;
      link.click();
    });

    const [video] = media.getVideoTracks();
    video.addEventListener("ended", () => {
      mediaRecorder.stop();
    });
  }

  async function handleStopRecording(e) {
    console.log("stop recording");
    startRecording.disabled = false;
    stopRecording.disabled = true;

    const [video] = media.getVideoTracks();
    video.stop();
  }
</script>
